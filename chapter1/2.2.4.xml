<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

broadcast chan walker_green, walker_yellow, walker_red;
broadcast chan car_green, car_yellow, car_red;
chan push;</declaration><template><name x="8" y="8">WalkerSignal</name><declaration>// Place local declarations here.

clock t;</declaration><location id="id0" x="-128" y="-152"><name x="-136" y="-184">RedWait</name></location><location id="id1" x="56" y="8"><name x="48" y="-24">Blink</name></location><location id="id2" x="56" y="-152"><name x="48" y="-184">Red</name></location><location id="id3" x="-128" y="8"><name x="-136" y="-24">Green</name></location><init ref="id3"/><transition><source ref="id0"/><target ref="id3"/><label kind="guard" x="-232" y="-104">t &gt;= 1</label><label kind="synchronisation" x="-232" y="-88">walker_green!</label><label kind="assignment" x="-232" y="-72">t := 0</label></transition><transition><source ref="id2"/><target ref="id0"/><label kind="synchronisation" x="-96" y="-168">car_red?</label><label kind="assignment" x="-96" y="-152">t := 0</label></transition><transition><source ref="id1"/><target ref="id2"/><label kind="guard" x="64" y="-104">t &gt;= 3</label><label kind="synchronisation" x="64" y="-88">walker_red!</label><label kind="assignment" x="64" y="-64">t := 0</label></transition><transition><source ref="id3"/><target ref="id1"/><label kind="guard" x="-96" y="-24">t &gt;= 10</label><label kind="synchronisation" x="-96" y="-8">walker_yellow!</label><label kind="assignment" x="-96" y="8">t := 0</label></transition></template><template><name>CarSignal</name><declaration>
clock t;</declaration><location id="id4" x="-152" y="-112"><name x="-160" y="-144">RedWait</name></location><location id="id5" x="32" y="48"><name x="24" y="16">Yellow</name></location><location id="id6" x="32" y="-112"><name x="24" y="-144">Red</name></location><location id="id7" x="-152" y="48"><name x="-160" y="16">Green</name></location><init ref="id7"/><transition><source ref="id4"/><target ref="id7"/><label kind="guard" x="-224" y="-64">t &gt;= 1</label><label kind="synchronisation" x="-224" y="-48">car_green!</label><label kind="assignment" x="-224" y="-32">t := 0</label></transition><transition><source ref="id6"/><target ref="id4"/><label kind="synchronisation" x="-104" y="-136">walker_red?</label><label kind="assignment" x="-104" y="-112">t := 0</label></transition><transition><source ref="id5"/><target ref="id6"/><label kind="guard" x="48" y="-64">t &gt;= 5</label><label kind="synchronisation" x="48" y="-48">car_red!</label><label kind="assignment" x="48" y="-32">t := 0</label></transition><transition><source ref="id7"/><target ref="id5"/><label kind="guard" x="-112" y="48">t &gt;= 30</label><label kind="synchronisation" x="-112" y="64">push?</label><label kind="assignment" x="-112" y="80">t := 0</label></transition></template><template><name>Walker</name><declaration>
clock t;</declaration><location id="id8" x="-32" y="-72"><name x="-48" y="-112">Walking</name></location><location id="id9" x="64" y="64"><name x="56" y="32">Wait</name></location><location id="id10" x="-112" y="64"><name x="-120" y="32">Init</name></location><init ref="id10"/><transition><source ref="id8"/><target ref="id10"/><label kind="guard" x="-184" y="-40">7 &lt;= t &amp;&amp; t &lt;= 12</label></transition><transition><source ref="id9"/><target ref="id8"/><label kind="synchronisation" x="32" y="-40">walker_green?</label><label kind="assignment" x="32" y="-16">t := 0</label></transition><transition><source ref="id10"/><target ref="id9"/><label kind="synchronisation" x="-80" y="48">push!</label></transition></template><system>// Place template instantiations here.
WS = WalkerSignal();
CS = CarSignal();
W = Walker();

// List one or more processes to be composed into a system.
system WS, CS, W;</system></nta>